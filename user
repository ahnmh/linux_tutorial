사용자 계정 관련 파일

/etc/passwd
: 사용자 계정 정보가 저장된 기본 파일
ahnmh@ahnmh-samsung:/etc$ cat passwd
root:x:0:0:root:/root:/bin/bash ---> root
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin ---> 시스템 데몬
bin:x:2:2:bin:/bin:/usr/sbin/nologin ---> 명령어 관리를 위한 계정
sys:x:3:3:sys:/dev:/usr/sbin/nologin
...
syslog:x:101:104::/home/syslog:/bin/false
...
ahnmh:x:1000:1000:ahnmh,,,:/home/ahnmh:/bin/bash
한행에 한 명에 대한 정보를 기록
로그인ID: 32자까지 가능하나, 8자를 넘지 않는 것이 좋음.
x: 이 위치에 예전 유닉스 시스템은 사용자 암호를 저장했었다.
UID:
사용자ID 번호. 0~999번과 65544번은 시스템 사용자를 위한 UID로 예약되어 있다. 일반 사용자는 1000번부터 할당된다.
로그인 ID가 달라도 UID가 같으면 같은 사용자로 판단한다. 만일 user1의 UID가 0이라면 root계정으로 인식됨.
GID:
그룹ID번호. 사용자는 무조건 하나 이상의 그룹에 포함된다. 특별히 소속 그룹을 지정하지 않으면 자동으로 로그인ID가 그룹이 됨.
그룹에 대한 정보는 /etc/group 파일에 저장됨.
설명:
사용자의 실명이나 부서명, 연락처 등 사용자에 대한 일반적인 정보가 기록됨.
홈디렉토리:
사용자 계정에 할당된 홈 디렉토리의 절대 경로. 사용자가 로그인할 때 자동적으로 로그인되는 디렉토리
로그인셸:
사용자의 로그인셸. 사용자가 로그인할 때 기본적으로 동작하는 셸(bash셸)

/etc/shadow
ahnmh@ahnmh-samsung:/etc$ sudo cat shadow
[sudo] password for ahnmh: 
root:!:16892:0:99999:7:::
daemon:*:16652:0:99999:7:::
bin:*:16652:0:99999:7:::
sys:*:16652:0:99999:7:::
...
ahnmh:$6$VKwkMAWO$pMicbcLkDYFGJW.tR7Ap9d0V.s1cywY7oJBWNkB.0wHfJM6vvXvLtP7sByQoXL6NG7TrxGkgohtuzzrtSvoWW.:16892:0:99999:7:::
로그인 ID
암호:
실제 비밀번호가 암호화되어 저장됨.
비밀번호는 일방형 암호여서 원래 어떤 문자였는지 복구할 수 없다. 사용자가 로그인할 때 입력하는 비밀번호를 다시 암호화하여 비교함.
최종변경일:
암호가 마지막으로 변경된 날짜. 1970년 1월 1일부터 적산한 날.
MIN:
만일 3이면 최소 3일은 해당 암호를 그대로 사용해야 함을 의미. 0으로 설정하는 것이 좋다.
MAX:
암호를 사용할 수 있는 최대 기간
WARNING:
암호가 만료되기 전에 경고를 시작하는 날수
INACTIVE:
암호가 만료된 후에도 이 항목에 지정한 날수 동안은 로그인이 가능함.
EXPIRE:
사용자 계정이 만료되는 날.
Flag: Reverved.


/etc/login.defs
사용자 계정 설정과 관련된 디폴트 값을 정의한 파일.
...
#
# Password aging controls:
#
#	PASS_MAX_DAYS	Maximum number of days a password may be used.
#	PASS_MIN_DAYS	Minimum number of days allowed between password changes.
#	PASS_WARN_AGE	Number of days warning given before a password expires.
#
PASS_MAX_DAYS	99999
PASS_MIN_DAYS	0
PASS_WARN_AGE	7

#
# Min/max values for automatic uid selection in useradd
#
UID_MIN			 1000
UID_MAX			60000
# System accounts
#SYS_UID_MIN		  100
#SYS_UID_MAX		  999

#
# Min/max values for automatic gid selection in groupadd
#
GID_MIN			 1000
GID_MAX			60000
# System accounts
#SYS_GID_MIN		  100
#SYS_GID_MAX		  999

#
# Max number of login retries if password is bad. This will most likely be
# overriden by PAM, since the default pam_unix module has it's own built
# in of 3 retries. However, this is a safe fallback in case you are using
# an authentication module that does not enforce PAM_MAXTRIES.
#
LOGIN_RETRIES		5

#
# Max time in seconds for login
#
LOGIN_TIMEOUT		60

#
# Which fields may be changed by regular users using chfn - use
# any combination of letters "frwh" (full name, room number, work
# phone, home phone).  If not defined, no changes are allowed.
# For backward compatibility, "yes" = "rwh" and "no" = "frwh".
# 
CHFN_RESTRICT		rwh

#
# Should login be allowed if we can't cd to the home directory?
# Default in no.
#
DEFAULT_HOME	yes
...
# UMASK is the default umask value for pam_umask and is used by
# 022 is the "historical" value in Debian for UMASK
# If USERGROUPS_ENAB is set to "yes", that will modify this UMASK default value
UMASK		022
...


/etc/group
root:x:0:
daemon:x:1:
bin:x:2:
sys:x:3:
...
ahnmh:x:1000:
sambashare:x:124:ahnmh
그룹에 관한 정보를 포함

/etc/gshadow
그룹 암호가 저장된 파일. 유닉스에는 없었으나 리눅스에서 별도로 만듬.




사용자 계정 생성
useradd <옵션> <로그인 ID>
useradd -m -d /home/user2 user2
useradd -m -d /home/user2 -u 2000 -g 100 -s /bin/bash user2
useradd -D
-m : 홈디렉토리 생성
-d : 디렉토리명
-u : UID
-g : GID
-s : Shell
-D : 기본 설정값 출력(/etc/default/useradd)

sudo cat passwd
ahnmh:x:1000:1000:ahnmh,,,:/home/ahnmh:/bin/bash
user2:x:1001:1001::/home/user2:

user2@ahnmh-samsung:/home$ useradd -D
GROUP=100
HOME=/home
INACTIVE=-1
EXPIRE=
SHELL=/bin/sh
SKEL=/etc/skel ---> 사용자 계정 생성시 홈 디렉토리에 공통으로 배포할 파일을 여기에 두면 자동으로 복사됨.
CREATE_MAIL_SPOOL=no


* 생성된 계정에서는 아래와 같이 관리자 계정 명령이 수행되지 않는다.
user2@ahnmh-samsung:/home$ sudo useradd -D -s /bin/bash
[sudo] password for user2: 
user2 is not in the sudoers file.  This incident will be reported.



usermod <옵션> <로그인 ID>
사용자 계정 정보를 수정
usermod -u 1111 user2
usermod -l user22 user2
usermod -d /home/user111 user1
usermod -s /bin/bash
usermod -f 10 -e 2016-04-10 user2
-u : 
-o : UID의 중복을 허
-g : 
-d : 
-s : 
-f : 계정 비활성화(INACTIVE) 날짜를 수정
-e : 계정 만료(EXPIRE) 날짜를 수정
-l : 새 로그인 이름

* INACTIVE / EXPIRE는 usermod 명령으로 수정하고, MIN / MAX / WARNING은 passwd 명령으로 수정한다.
확인 방법
ahnmh@ahnmh-samsung:/etc$ sudo passwd -S user2
user2 P 04/02/2016 0 99999 7 -1
수정 방법
sudo passwd -n 2 -x 100 -w 5 user2 ---> MIN=2 / MAX=100 / WARNING=5
chage 명령을 통한 확인 방법
ahnmh@ahnmh-samsung:/etc$ sudo chage -l user2
Last password change					:  4월 02, 2016
Password expires					: never
Password inactive					: never
Account expires						: never
Minimum number of days between password change		: 0
Maximum number of days between password change		: 99999
Number of days of warning before password expires	: 7



* 현재 사용 가능한 셸 목록 확인
ahnmh@ahnmh-samsung:/etc$ cat shells 
# /etc/shells: valid login shells
/bin/sh
/bin/dash
/bin/bash
/bin/rbash


사용자 계정 삭제
userdel -r -f user2
: 사용자 계정을 삭제한다. 사용자 홈디렉토리까지 삭제한다.
: -f -> 로그인 중이어도 강제로 삭제한다.
홈디렉토리가 아닌 곳에 위치한 사용자 계정 소유의 파일이 있을 수 있다.
-r 옵션은 홈디렉토리만 삭제하기 때문에 아래와 같은 방법으로 해당 계정 소유의 모든 파일을 삭제할 수 있다.
sudo find / -user 1001 -exec rm -r {} \;




그룹 관리 명령
groupadd gtest1 : gtest1이름으로 그룹을 생성한다.
groupmod -g 3001 gtest1 : gtest1 그룹의 GID를 3001로 변경
groupmod -n gtest1 gtest2 : gtest1 그룹의 이름을 gtest2로 변경
groupdel gtest1 : gtest1 그룹 삭제
gpasswd -a user2 gtest1 : user2 계정을 gtest1에 추가
gpasswd -d user2 gtest1 : user2 계정을 gtest1으로부터 제거
gpasswd gtest1 : 그룹 암호 설정, 변경
newgrp gtest1 : 
사용자 계정을 생성할 때 기본 그룹(1000)이 할당된다.
현재 소속 그룹에서 다른 그룹으로 변경할 때 newgrp 명령이 사용됨.
이때 그룹 패스워드를 물어봄.
* 현재 로그인 계정의 그룹 정보 확인
ahnmh@ahnmh-samsung:/etc$ id
uid=1000(ahnmh) gid=1000(ahnmh) groups=1000(ahnmh),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lpadmin),124(sambashare)




사용자 정보 관리 명령
* RUID = 사용자가 로그인 할 때 사용한 UID
* EUID = su 명령을 사용하여 다른 사용자로 전환했을 때의 UID


사용자 확인 명령
who
ahnmh@ahnmh-samsung:/etc$ who ---> 사용자 이름 + 터미널 번호 + 로그인 시간
ahnmh    :0           2016-04-03 06:49 (:0)
ahnmh    pts/0        2016-04-03 07:31 (:0)

ahnmh@ahnmh-samsung:/etc$ who -q ---> 로그인한 사용자 수
ahnmh ahnmh
# users=2

ahnmh@ahnmh-samsung:/etc$ who -b ---> 부팅 시간
         system boot  2016-04-03 06:49

ahnmh@ahnmh-samsung:/etc$ who -r ---> 현재 런레벨
         run-level 2  2016-04-03 06:49

ahnmh@ahnmh-samsung:/etc$ who -m ---> 현재 사용자 계정의 정보(RUID)
ahnmh    pts/0        2016-04-03 07:31 (:0)


w <사용자 이름>
: 현재 로그인한 사용자의 정보 + 사용자 실행 작업 정보
ahnmh@ahnmh-samsung:/etc$ w
 07:51:34 up  1:02,  2 users,  load average: 0.00, 0.02, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
ahnmh    :0       :0               06:49   ?xdm?   2:57   0.22s init --user
ahnmh    pts/0    :0               07:31    2.00s  0.26s  0.00s w

last
: 사용자들의 로그인, 로그아웃 시간, 터미널, IP 주소를 출력
ahnmh@ahnmh-samsung:/etc$ last
ahnmh    pts/0        :0               Sun Apr  3 07:31   still logged in
ahnmh    pts/0        :0               Sun Apr  3 06:51 - 07:31  (00:40)    
ahnmh    :0           :0               Sun Apr  3 06:49   still logged in   
reboot   system boot  3.19.0-56-generi Sun Apr  3 06:49 - 07:52  (01:02)    
ahnmh    :0           :0               Sun Apr  3 01:00 - down   (00:00)   
...

RUID 확인
: who am i, who -m
ahnmh@ahnmh-samsung:/etc$ who am i
ahnmh    pts/0        2016-04-03 07:31 (:0)

EUID 확인
: whoami, id

소속 그룹 확인
ahnmh@ahnmh-samsung:/etc$ groups
ahnmh adm cdrom sudo dip plugdev lpadmin sambashare


root 권한 사용
: 일반 사용자가 sudo 명령으로 root 권한을 실행하려면 특정 권한을 부여받아야 하다.
이 권한은 /etc/sudoers 파일에 설정하는데 root 계정으로만 수정이 가능하다.
visudo 명령을 통해 파일을 열고 수정함.
root의 경우 아래와 같다.
...
# User privilege specification
root	ALL=(ALL:ALL) ALL
...

특정 사용자에게 특정 명령을 수행할 권한을 부여하려면 다음과 같이 visudo를 통해 추가한다.
user2 ALL=/sbin/useradd, /sbin/usermod
user2 사용자는 이제 useradd, usermod 명령을 sudo를 통해 수행할 수 있게 됨.


암호 관리
passwd -l user2 : 암호 잠금
passwd -u user2 : 암호 잠금 해제
passwd -d user2 : 암호 제거





chown -R <사용자 계정:그룹> <디렉토리 또는 파일>
: 파일 및 디렉토리의 소유자와 소유 그룹 변경
: -R 옵션을 지정하면 하위 디렉토리 파일까지 모두 반영됨.
: <사용자 계정:그룹>과 같이 지정하면 사용자 계정과 그룹 모두 변경됨.
ahnmh@ahnmh-samsung:~/Documents$ ll
total 20
drwxr-xr-x  4 ahnmh ahnmh 4096 Apr  3 08:22 ./
drwxr-xr-x 23 ahnmh ahnmh 4096 Apr  3 08:21 ../
drwxrwxr-x  2 ahnmh ahnmh 4096 Apr  3 08:22 test/

ahnmh@ahnmh-samsung:~/Documents$ sudo chown -R root:root test
ahnmh@ahnmh-samsung:~/Documents$ ll
total 20
drwxr-xr-x  4 ahnmh ahnmh 4096 Apr  3 08:22 ./
drwxr-xr-x 23 ahnmh ahnmh 4096 Apr  3 08:23 ../
drwxrwxr-x  2 root  root  4096 Apr  3 08:24 test/

chgrp -R <사용자 계정:그룹> <디렉토리 또는 파일>
: 파일과 디렉토리의 소유 그룹을 변경





